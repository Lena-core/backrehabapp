import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  TouchableOpacity,
} from 'react-native';
import { useNavigation } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';
import LinearGradient from 'react-native-linear-gradient';
import { SettingsStackParamList } from '../types';
import { COLORS, GRADIENTS } from '../constants/colors';

type SettingsMainScreenNavigationProp = StackNavigationProp<SettingsStackParamList, 'SettingsMain'>;

interface SettingsMenuItem {
  id: string;
  title: string;
  description: string;
  screen: keyof SettingsStackParamList;
  icon: string;
}

const settingsMenuItems: SettingsMenuItem[] = [
  {
    id: 'exercises',
    title: '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è',
    description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –∏ —Ö–æ–¥—å–±—ã',
    screen: 'ExerciseSettings',
    icon: 'üèÉ‚Äç‚ôÄÔ∏è',
  },
  {
    id: 'notifications',
    title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏',
    screen: 'Notifications',
    icon: 'üîî',
  },
  {
    id: 'feedback',
    title: '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å',
    description: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
    screen: 'Feedback',
    icon: 'üí¨',
  },
  {
    id: 'privacy',
    title: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏',
    description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—â–∏—Ç–µ –¥–∞–Ω–Ω—ã—Ö',
    screen: 'PrivacyPolicy',
    icon: 'üîí',
  },
  {
    id: 'agreement',
    title: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ',
    description: '–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
    screen: 'UserAgreement',
    icon: 'üìã',
  },
];

const SettingsMainScreen: React.FC = () => {
  const navigation = useNavigation<SettingsMainScreenNavigationProp>();

  const handleMenuItemPress = (screen: keyof SettingsStackParamList) => {
    navigation.navigate(screen);
  };

  return (
    <LinearGradient colors={GRADIENTS.MAIN_BACKGROUND} style={styles.container}>
      <ScrollView contentContainerStyle={styles.scrollContent}>
        <View style={styles.header}>
          <Text style={styles.headerTitle}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</Text>
          <Text style={styles.headerSubtitle}>
            –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥ —Å–≤–æ–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏
          </Text>
        </View>

        <View style={styles.menuContainer}>
          {settingsMenuItems.map((item) => (
            <TouchableOpacity
              key={item.id}
              style={styles.menuItem}
              onPress={() => handleMenuItemPress(item.screen)}
              activeOpacity={0.7}
            >
              <View style={styles.menuItemContent}>
                <View style={styles.menuItemIcon}>
                  <Text style={styles.iconText}>{item.icon}</Text>
                </View>
                <View style={styles.menuItemText}>
                  <Text style={styles.menuItemTitle}>{item.title}</Text>
                  <Text style={styles.menuItemDescription}>{item.description}</Text>
                </View>
                <View style={styles.menuItemArrow}>
                  <Text style={styles.arrowText}>‚Ä∫</Text>
                </View>
              </View>
            </TouchableOpacity>
          ))}
        </View>

        {/* –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ */}
        <Text style={styles.disclaimer}>
          –ü—Ä–∏–≤–µ–¥–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–æ—Å–∏—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. –ï—Å–ª–∏ –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è 
          –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∏–ª–∏ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∏–∞–≥–Ω–æ–∑–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.
        </Text>
      </ScrollView>
    </LinearGradient>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  scrollContent: {
    paddingHorizontal: 20,
    paddingTop: 60,
    paddingBottom: 40,
  },
  header: {
    alignItems: 'center',
    marginBottom: 40,
  },
  headerTitle: {
    fontSize: 32,
    fontWeight: 'bold',
    color: COLORS.TEXT_PRIMARY,
    marginBottom: 8,
  },
  headerSubtitle: {
    fontSize: 16,
    color: COLORS.TEXT_PRIMARY,
    opacity: 0.7,
    textAlign: 'center',
  },
  menuContainer: {
    marginBottom: 30,
  },
  menuItem: {
    backgroundColor: COLORS.WHITE,
    borderRadius: 15,
    marginBottom: 12,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.05,
    shadowRadius: 4,
    elevation: 2,
  },
  menuItemContent: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 20,
  },
  menuItemIcon: {
    width: 50,
    height: 50,
    borderRadius: 25,
    backgroundColor: COLORS.SCALE_COLOR,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 15,
  },
  iconText: {
    fontSize: 24,
  },
  menuItemText: {
    flex: 1,
  },
  menuItemTitle: {
    fontSize: 18,
    fontWeight: '600',
    color: COLORS.TEXT_PRIMARY,
    marginBottom: 4,
  },
  menuItemDescription: {
    fontSize: 14,
    color: COLORS.TEXT_PRIMARY,
    opacity: 0.6,
    lineHeight: 18,
  },
  menuItemArrow: {
    marginLeft: 10,
  },
  arrowText: {
    fontSize: 24,
    color: COLORS.TEXT_PRIMARY,
    opacity: 0.3,
  },
  disclaimer: {
    fontSize: 11,
    color: COLORS.TEXT_PRIMARY,
    textAlign: 'center',
    lineHeight: 16,
    opacity: 0.7,
    marginTop: 20,
  },
});

export default SettingsMainScreen;
