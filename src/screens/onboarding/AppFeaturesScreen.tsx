// –≠–∫—Ä–∞–Ω "–ß—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"

import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  Dimensions,
} from 'react-native';
import LinearGradient from 'react-native-linear-gradient';
import { useNavigation } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';

import { OnboardingStackParamList } from '../../types';
import { COLORS, GRADIENTS } from '../../constants';
import { CustomButton } from '../../components';

const { width, height } = Dimensions.get('window');

type AppFeaturesNavigationProp = StackNavigationProp<OnboardingStackParamList, 'AppFeatures'>;

interface Feature {
  icon: string;
  title: string;
  color: string;
}

const FEATURES: Feature[] = [
  {
    icon: 'üìã',
    title: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –±–æ–ª–∏ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏.',
    color: COLORS.CTA_BUTTON,
  },
  {
    icon: 'üé¨',
    title: '–í–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ —Ç–∞–π–º–µ—Ä –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, —á—Ç–æ–±—ã –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –≤—Å–µ –∏–¥–µ–∞–ª—å–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ.',
    color: COLORS.SECONDARY_ACCENT,
  },
  {
    icon: 'üîî',
    title: '–£–º–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Å–¥–µ–ª–∞—Ç—å –∑–∞–±–æ—Ç—É –æ —Å–ø–∏–Ω–µ –ø–æ–ª–µ–∑–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–æ–π.',
    color: COLORS.PRIMARY_ACCENT,
  },
];

const AppFeaturesScreen: React.FC = () => {
  const navigation = useNavigation<AppFeaturesNavigationProp>();

  const handleContinue = () => {
    navigation.navigate('MedicalDisclaimer');
  };

  const handleBack = () => {
    navigation.goBack();
  };

  return (
    <LinearGradient colors={GRADIENTS.MAIN_BACKGROUND} style={styles.container}>
      <View style={styles.content}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <View style={styles.header}>
          <Text style={styles.title}>–ß—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:</Text>
        </View>

        {/* –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ */}
        <ScrollView
          style={styles.scrollView}
          contentContainerStyle={styles.scrollContent}
          showsVerticalScrollIndicator={false}
        >
          {FEATURES.map((feature, index) => (
            <View key={index} style={styles.featureCard}>
              <View style={[styles.iconCircle, { backgroundColor: feature.color }]}>
                <Text style={styles.iconText}>{feature.icon}</Text>
              </View>
              <Text style={styles.featureText}>{feature.title}</Text>
            </View>
          ))}
        </ScrollView>

        {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
        <View style={styles.buttonContainer}>
          <CustomButton
            title="–ù–∞–∑–∞–¥"
            onPress={handleBack}
            variant="outline"
            size="medium"
            style={styles.backButton}
          />
          <CustomButton
            title="–î–∞–ª–µ–µ"
            onPress={handleContinue}
            variant="primary"
            size="medium"
            style={styles.continueButton}
          />
        </View>
      </View>
    </LinearGradient>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  content: {
    flex: 1,
    paddingTop: 60,
    paddingHorizontal: 20,
    paddingBottom: 40,
  },
  header: {
    alignItems: 'center',
    marginBottom: 30,
  },
  title: {
    fontSize: 26,
    fontWeight: 'bold',
    color: COLORS.TEXT_PRIMARY,
    textAlign: 'center',
    lineHeight: 34,
  },
  scrollView: {
    flex: 1,
  },
  scrollContent: {
    paddingBottom: 20,
  },
  featureCard: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: COLORS.WHITE,
    borderRadius: 16,
    padding: 20,
    marginBottom: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.08,
    shadowRadius: 8,
    elevation: 3,
  },
  iconCircle: {
    width: 60,
    height: 60,
    borderRadius: 30,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 16,
  },
  iconText: {
    fontSize: 28,
  },
  featureText: {
    flex: 1,
    fontSize: 16,
    lineHeight: 24,
    color: COLORS.TEXT_PRIMARY,
    fontWeight: '500',
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    gap: 12,
    marginTop: 20,
  },
  backButton: {
    flex: 1,
  },
  continueButton: {
    flex: 1,
  },
});

export default AppFeaturesScreen;
