// –≠–∫—Ä–∞–Ω —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º –ø–æ–¥—Ö–æ–¥–∞ "–±–µ–∑ –±–æ–ª–∏" - –ø–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º —É—Ä–æ–≤–Ω—è –±–æ–ª–∏

import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  Dimensions,
} from 'react-native';
import LinearGradient from 'react-native-linear-gradient';
import { useNavigation } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';

import { OnboardingStackParamList } from '../../types';
import { COLORS, GRADIENTS } from '../../constants';
import { CustomButton } from '../../components';

const { width, height } = Dimensions.get('window');

type PainApproachNavigationProp = StackNavigationProp<OnboardingStackParamList, 'PainApproach'>;

const PainApproachScreen: React.FC = () => {
  const navigation = useNavigation<PainApproachNavigationProp>();

  const handleContinue = () => {
    navigation.navigate('PainLevel');
  };

  const handleBack = () => {
    navigation.goBack();
  };

  return (
    <LinearGradient colors={GRADIENTS.MAIN_BACKGROUND} style={styles.container}>
      <View style={styles.content}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <View style={styles.header}>
          <Text style={styles.title}>–ù–∞—à –ø–æ–¥—Ö–æ–¥</Text>
        </View>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <View style={styles.mainContent}>
          {/* –ò–∫–æ–Ω–∫–∞ */}
          <View style={styles.iconContainer}>
            <Text style={styles.icon}>üí°</Text>
          </View>

          {/* –¢–µ–∫—Å—Ç */}
          <View style={styles.textContainer}>
            <Text style={styles.mainText}>
              –û—Å–Ω–æ–≤–∞ –Ω–∞—à–µ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ ‚Äî –ø–æ–ª–Ω—ã–π –æ—Ç–∫–∞–∑ –æ—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π —á–µ—Ä–µ–∑ –±–æ–ª—å.
            </Text>
            
            <Text style={styles.secondaryText}>
              –ò–º–µ–Ω–Ω–æ –≤–∞—à —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç, –∫–∞–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ —Å –∫–∞–∫–æ–π –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å—é –º—ã –±—É–¥–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å.
            </Text>

            <Text style={styles.secondaryText}>
              –≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ä–µ–¥–∏—Ç—å –∑–∞–∂–∏–≤–∞—é—â–∏–µ —Ç–∫–∞–Ω–∏ –∏ –Ω–µ –∑–∞–º–µ–¥–ª–∏—Ç—å –≤–∞—à–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ.
            </Text>
          </View>

          {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
          <View style={styles.highlightCard}>
            <Text style={styles.highlightText}>
              ‚ö†Ô∏è –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ –±–æ–ª—å –º–æ–≥—É—Ç –Ω–∞–≤—Ä–µ–¥–∏—Ç—å –≤–∞—à–µ–º—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é
            </Text>
          </View>
        </View>

        {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
        <View style={styles.buttonContainer}>
          <CustomButton
            title="–ù–∞–∑–∞–¥"
            onPress={handleBack}
            variant="outline"
            size="medium"
            style={styles.backButton}
          />
          <CustomButton
            title="–ü–æ–Ω—è—Ç–Ω–æ"
            onPress={handleContinue}
            variant="primary"
            size="medium"
            style={styles.continueButton}
          />
        </View>
      </View>
    </LinearGradient>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  content: {
    flex: 1,
    paddingTop: 60,
    paddingHorizontal: 20,
    justifyContent: 'space-between',
  },
  header: {
    alignItems: 'center',
    marginBottom: 20,
  },
  title: {
    fontSize: 32,
    fontWeight: 'bold',
    color: COLORS.TEXT_PRIMARY,
    textAlign: 'center',
  },
  mainContent: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  iconContainer: {
    marginBottom: 30,
  },
  icon: {
    fontSize: 80,
  },
  textContainer: {
    alignItems: 'center',
    paddingHorizontal: 10,
  },
  mainText: {
    fontSize: 20,
    fontWeight: '600',
    color: COLORS.TEXT_PRIMARY,
    textAlign: 'center',
    lineHeight: 28,
    marginBottom: 24,
  },
  secondaryText: {
    fontSize: 16,
    color: COLORS.TEXT_PRIMARY,
    textAlign: 'center',
    lineHeight: 24,
    marginBottom: 16,
    opacity: 0.8,
  },
  highlightCard: {
    backgroundColor: COLORS.PAIN_ACUTE,
    borderRadius: 12,
    padding: 20,
    marginTop: 30,
    marginHorizontal: 10,
  },
  highlightText: {
    fontSize: 15,
    fontWeight: '600',
    color: COLORS.TEXT_PRIMARY,
    textAlign: 'center',
    lineHeight: 22,
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    gap: 12,
    paddingVertical: 20,
  },
  backButton: {
    flex: 1,
  },
  continueButton: {
    flex: 1,
  },
});

export default PainApproachScreen;
